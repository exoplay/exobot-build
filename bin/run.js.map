{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"path\"","webpack:///external \"fs-extra\"","webpack:///external \"child_process\"","webpack:///external \"webpack\"","webpack:///external \"@exoplay/exobot\"","webpack:///external \"change-case\"","webpack:///external \"yeoman-environment\"","webpack:///./webpackConfig.js","webpack:///./run.js","webpack:///external \"vm\"","webpack:///external \"chalk\"","webpack:///external \"progress-bar-webpack-plugin\"","webpack:///external \"webpack-node-externals\"","webpack:///external \"generator-exobot\"","webpack:///external \"yargs\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","chalk","webpack","path","ProgressBarPlugin","externals","options","extensions","split","input","output","cwd","sourceDir","parse","dir","destDir","modulesDir","join","process","target","devtool","context","entry","js","base","filename","libraryTarget","rules","test","exclude","loader","query","cacheDirectory","presets","plugins","resolve","clear","format","green","LoaderOptionsPlugin","minimize","debug","node","global","Buffer","crypto","clearImmediate","setImmediate","clearTimeout","setTimeout","os","_filename","__dirname","yeomanEnv","yeoman","createEnv","register","__non_webpack_require__","defaultName","exampleConfig","shell","import","http","uptime","help","greetings","permissions","config","inputOption","alias","default","outputOption","cwdOption","watchOption","watch","forceOption","force","argv","usage","command","start","demand","logResult","err","stats","console","error","jsonStats","toJson","errors","length","warnings","warn","log","build","args","callback","webpackConfig","compiler","run","exit","buildFromConfig","configFile","eval","packagePath","fs","existsSync","f","copySync","pluginsToInstall","filter","execSync","outputFile","botFileContents","createFileSync","writeFileSync","createBot","cb","inputFile","exobotPath","exobotSourceExists","Error","runExampleBot","pkg","botConfig","camel","main","Exobot","_","fork","bot"],"mappings":"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","file":"run.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");","module.exports = require(\"child_process\");","module.exports = require(\"webpack\");","module.exports = require(\"@exoplay/exobot\");","module.exports = require(\"change-case\");","module.exports = require(\"yeoman-environment\");","const chalk = require('chalk');\nconst webpack = require('webpack');\nconst path = require('path');\n\nconst ProgressBarPlugin = require('progress-bar-webpack-plugin');\nconst externals = require('webpack-node-externals');\n\nmodule.exports = function (options) {\n  if (typeof options.extensions === 'string') {\n    options.extensions = options.extensions.split(',');\n  }\n\n  const extensions = ['.js', '.json'];\n\n  const input = options.input;\n  const output = options.output;\n  const cwd = options.cwd;\n\n  const sourceDir = path.parse(input).dir;\n  const destDir = path.parse(output).dir;\n  const modulesDir = path.join(cwd, 'node_modules');\n\n  return {\n    mode: process.env.NODE_ENV || 'production',\n    target: 'node',\n    externals: [ externals({ modulesDir }) ],\n    devtool: 'source-map',\n    context: path.join(cwd, sourceDir),\n    entry: {\n      js: path.parse(input).base,\n    },\n    output: {\n      path: path.join(cwd, destDir),\n      filename: path.parse(output).base,\n      libraryTarget: 'commonjs'\n    },\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: /node_modules/,\n          loader: 'babel-loader',\n          query: {\n            cacheDirectory: true,\n            presets: [\n              '@babel/env',\n              'babel-preset-minify',\n            ],\n            plugins: [\n              ['@babel/plugin-proposal-decorators', { 'legacy': true }],\n              ['@babel/plugin-proposal-class-properties', { 'loose' : true }],\n              'babel-plugin-syntax-export-extensions',\n            ],\n          }\n        }\n      ]\n    },\n    resolve: {\n      extensions: extensions,\n      modules: [\n        path.join(cwd, sourceDir),\n      ]\n    },\n    plugins: [\n      new ProgressBarPlugin({\n        clear: false,\n        format: 'build [:bar] ' + chalk.green(':percent') + ' (:elapsed seconds)',\n      }),\n      //new webpack.NoErrorsPlugin(),\n      new webpack.LoaderOptionsPlugin({\n        minimize: true,\n        debug: true\n      }),\n    ],\n    node: {\n      global: false,\n      process: false,\n      Buffer: false,\n      crypto: false,\n      module: false,\n      clearImmediate: false,\n      setImmediate: false,\n      clearTimeout: false,\n      setTimeout: false,\n      os: false,\n      _filename: false,\n      __dirname: false,\n    }\n  };\n};\n","import { Exobot } from '@exoplay/exobot';\nimport { camel } from 'change-case';\n\nimport webpack from 'webpack';\nimport path from 'path';\nimport fs from 'fs-extra';\nimport vm from 'vm';\n\nimport yeoman from 'yeoman-environment'\n\nimport { fork } from 'child_process';\nimport { execSync } from 'child_process';\n\nimport config from './webpackConfig';\n\nimport { app, plugin, adapter } from 'generator-exobot';\n\nconst yeomanEnv = yeoman.createEnv();\nyeomanEnv.register(__non_webpack_require__.resolve('generator-exobot/generators/app'), 'exobot:app');\nyeomanEnv.register(__non_webpack_require__.resolve('generator-exobot/generators/adapter'), 'exobot:adapter');\nyeomanEnv.register(__non_webpack_require__.resolve('generator-exobot/generators/plugin'), 'exobot:plugin');\n\nconst defaultName = path.parse(process.cwd()).name + '.js';\n\nconst exampleConfig = {\n  key: 'exobot-example',\n  plugins: {\n    shell: ['@exoplay/exobot', { import: 'adapters.Shell' }],\n    http: ['@exoplay/exobot', { import: 'adapters.HTTP' }],\n    uptime: ['@exoplay/exobot', { import: 'plugins.Uptime' }],\n    help: ['@exoplay/exobot', { import: 'plugins.Help' }],\n    greetings: ['@exoplay/exobot', { import: 'plugins.Greetings' }],\n    permissions: ['@exoplay/exobot', { import: 'plugins.Permissions' }],\n    config: ['@exoplay/exobot', { import: 'plugins.Config' }],\n  },\n};\n\nconst inputOption = {\n  input: {\n    alias: 'i',\n    default: `./src/${defaultName}`,\n  },\n};\n\nconst outputOption = {\n  output: {\n    alias: 'o',\n    default: defaultName,\n  }\n};\n\nconst cwdOption = {\n  cwd: {\n    default: process.cwd(),\n  }\n};\n\nconst watchOption = {\n  watch: {\n    alias: 'w',\n    default: false,\n  }\n};\n\nconst forceOption = {\n  force: {\n    alias: 'f',\n    default: false,\n  }\n};\n\nconst argv = require('yargs')\n              .usage('exobot <command> [options]')\n              .command('build', 'Builds exobot', {\n                ...inputOption,\n                ...outputOption,\n                ...cwdOption,\n                ...watchOption,\n                ...forceOption,\n              })\n              .command('watch', 'Builds exobot', {\n                ...inputOption,\n                ...outputOption,\n                ...cwdOption,\n                ...forceOption,\n                watch: {\n                  ...watchOption.watch,\n                  default: true,\n                },\n              })\n              .command('run', 'Starts an exobot from config', {\n                ...inputOption,\n                ...outputOption,\n                ...cwdOption,\n                ...watchOption,\n                ...forceOption,\n                start: {\n                  default: true,\n                }\n              })\n              .command('example', 'Starts an exobot example', {\n                ...inputOption,\n                ...outputOption,\n                ...cwdOption,\n                ...forceOption,\n              })\n              .command('new <bot|plugin|adapter>', 'Bootstraps an exobot project', {\n                ...inputOption,\n                ...cwdOption,\n                ...outputOption,\n                ...forceOption,\n                name: {\n                  default: 'exobot',\n                }\n              })\n              .demand(1)\n              .boolean('watch')\n              .boolean('start')\n              .alias('h', 'help')\n              .help('h')\n              .argv;\n\nfunction logResult (err, stats) {\n  if (err) {\n    return console.error(err);\n  }\n\n  const jsonStats = stats.toJson();\n\n  if (jsonStats.errors.length > 0) {\n    return console.error(jsonStats.errors);\n  }\n\n  if (jsonStats.warnings.length > 0) {\n    console.warn(jsonStats.warnings);\n  }\n\n  console.log(`Wrote to ${argv.o}`);\n}\n\nfunction build(args, callback) {\n  const webpackConfig = config(argv);\n  const compiler = webpack(webpackConfig);\n\n  if (argv.watch) {\n    compiler.watch({}, (err, stats) => {\n      logResult(err, stats);\n      if (callback) {\n        callback();\n      }\n    });\n  } else {\n    compiler.run((err, stats) => {\n      logResult(err, stats);\n\n      if (callback) {\n        callback();\n      } else {\n        process.exit();\n      }\n    });\n  }\n}\n\nfunction buildFromConfig(args, configFile, callback) {\n  const config = eval('require')(configFile);\n  const packagePath = path.join(args.cwd, 'package.json');\n\n  if (fs.existsSync(packagePath) && !argv.f) {\n    console.log('Using existing package.json.');\n  } else {\n    console.log('No package.json found; creating one.');\n\n    fs.copySync('./package.json', packagePath);\n\n    const pluginsToInstall = (configFile.plugins || []).filter(p =>\n      typeof p === 'string'\n    );\n\n    execSync('npm install', [\n      '--save',\n      ...pluginsToInstall,\n    ]);\n  }\n\n  const outputFile = path.join(argv.cwd, argv.output);\n\n  console.log('Generating exobot file...');\n\n  const botFileContents = [\n    `require('babel-polyfill')`,\n    `const config = require('${configFile}')`,\n    `const { Exobot } = require('@exoplay/exobot');`,\n    `const bot = new Exobot(config);`,\n    `module.exports = bot;`,\n  ].join('\\n');\n\n  fs.createFileSync(outputFile);\n  fs.writeFileSync(outputFile,  botFileContents);\n\n  if (callback) {\n    callback();\n  }\n}\n\nfunction createBot(cb = () => {}) {\n  const inputFile = path.join(argv.cwd, argv.input);\n  const configFile = path.join(argv.cwd, 'exobot.config.js');\n  const outputFile = path.join(argv.cwd, argv.output);\n\n  let exobotPath = inputFile;\n  const exobotSourceExists = fs.existsSync(inputFile);\n\n  if (!exobotSourceExists) {\n    if(fs.existsSync(configFile)) {\n      exobotPath = configFile;\n    }\n  }\n\n  if (!exobotPath) {\n    throw new Error(`An exobot file was not found at ${inputFile} or ${configFile}.`);\n  }\n\n  buildFromConfig(argv, exobotPath, () => cb(outputFile));\n}\n\nfunction runExampleBot(args) {\n  const packagePath = path.join(args.cwd, 'package.json');\n  const pkg = __non_webpack_require__(packagePath);\n\n  const botConfig = {\n    ...exampleConfig,\n    plugins: {\n      ...exampleConfig.plugins,\n      [camel(pkg.name)]: [__non_webpack_require__(path.join(args.cwd, `./${pkg.main}`)), {}],\n    }\n  };\n\n  const exobot = new Exobot(botConfig);\n  return exobot;\n}\n\nswitch (argv._[0]) {\n  case 'build':\n  case 'watch':\n    build(argv);\n    break;\n\n  case 'run':\n    createBot(outputFile => fork(outputFile));\n    break;\n\n  case 'example':\n    // run yo generate bot\n    runExampleBot(argv);\n    break;\n\n  case 'new':\n    switch (argv.bot) {\n      case 'bot':\n        yeomanEnv.run('exobot:app');\n        break;\n      case 'adapter':\n        yeomanEnv.run('exobot:adapter');\n        break;\n      case 'plugin':\n        yeomanEnv.run('exobot:plugin');\n        break;\n    }\n    break;\n}\n","module.exports = require(\"vm\");","module.exports = require(\"chalk\");","module.exports = require(\"progress-bar-webpack-plugin\");","module.exports = require(\"webpack-node-externals\");","module.exports = require(\"generator-exobot\");","module.exports = require(\"yargs\");"],"sourceRoot":""}